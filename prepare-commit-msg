#!/bin/sh

possui_tags_proibidas() {

    local encontrou_tag_proibida=1


    for tag in ${lista_tags_proibidas[*]}; do
        git_diff_possui_tag_proibida=$(git diff | grep *$tag* | wc -l)
        git_diff_cached_possui_tag_proibida=$(git diff --cached | grep $tag | wc -l)

        if [[ $git_diff_possui_tag_proibida != 0 || $git_diff_cached_possui_tag_proibida != 0 ]]; then
            encontrou_tag_proibida=0
            break
        fi
    done

    if [[ $encontrou_tag_proibida == 0 ]]; then
        echo true
    else
        echo false
    fi
}


sigla_dev=$(git config user.sigladev)
branch=`git branch | grep '^\*' | cut -b3-`
# Tag ou termos que você não quer que existam no código
lista_tags_proibidas=("DEBUG" "WIP")
commit_possui_tags_proibidas=false


# Checa se as alterações que serão comitadas possuiem a tag/termos proibidos.
# Se tiver barra o commit
commit_possui_tags_proibidas=$(possui_tags_proibidas)
if [[ $commit_possui_tags_proibidas = true ]]; then
    tags_cadastradas=''

    # Monta um string com as tags separadas por virgula.
    for tag in ${lista_tags_proibidas[*]}; do
        if [[ -n $tags_cadastradas ]]; then
            tags_cadastradas="$tags_cadastradas, "
        fi
        tags_cadastradas="$tags_cadastradas$tag"
    done
    echo
    echo "********************************************************************************************"
    echo "*                                                                                          *"
    echo "*   SUAS ALTERAÇÕES POSSUEM TAGS/TERMOS PROIBIDOS. RETIRE-AS PARA PODER EXECUTAR O COMMIT  *"
    echo "*                                                                                          *"
    echo "********************************************************************************************"
    echo
    echo "As tags/termos $tags_cadastradas precisam ser removidas do seu código."
    exit 1
fi

# Checa se a $branch contém a palavra 'rebasing'.
# Isso indica que um rebase está em execução e, nesse caso, não possui uma branch.
if [[ $branch != *"rebasing"* ]]; then
    arquivo=`cat "$1"`

    # Checa se no nome da branch NãO possui as iniciais do desenvolvedor
    # Se não possui, não é uma branch comum de chamado (master, test, fix) e só adiciona um " " + sigla
    if [[ $branch != *"$sigla_dev"* ]]; then
        branch=$branch" "$sigla_dev
    fi

    # Adiciona o nome da branch no começo da mensagem do commit.
    echo "$branch: $arquivo" > "$1"
fi